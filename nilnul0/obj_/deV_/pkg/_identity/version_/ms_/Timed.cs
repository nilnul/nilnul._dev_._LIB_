using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace nilnul.obj_.deV_.pkg._identity.version_.ms_
{
	/// <summary>
	/// the version autogenerated by vs according to time:
	/// for example, for 1.0.*, the generated version is : 1.0.74363.8768, where the 3rd is days, the 4th is (seconds of the day) / 2
	/// note int.max >= seconds of the day. so using half of secondsOfDay might intend to reduce its width.
	/// </summary>
	///
	public class Timed
	{

		static public DateTime Time_ofVersion(Version version) {
			return new DateTime(2000, 1, 1)
									.AddDays(version.Build).AddSeconds(version.Revision * 2);

		}

		static public DateTime TimeOfExecuted() {
			return Time_ofVersion( System.Reflection.Assembly.GetExecutingAssembly().GetName().Version);
			

		}

		static public DateTime Time_ofBuild_ofRevision(int build, int revision) {
			return new DateTime(2000, 1, 1)
									.AddDays(build).AddSeconds(revision * 2);

		}

		static public DateTime Date_ofBuild(int build) {
			return new DateTime(2000, 1, 1)
									.AddDays(build);

		}


	}   /*
	 	 Setting only the 4th number to be * can be bad, as the version won't always increment. The 3rd number is the number of days since the year 2000, and the 4th number is the number of seconds since midnight (divided by 2) [IT IS NOT RANDOM]. So if you built the solution late in a day one day, and early in a day the next day, the later build would have an earlier version number. I recommend always using X.Y.* instead of X.Y.Z.* because your version number will ALWAYS increase this way.
	 	 
	 	 */

}
